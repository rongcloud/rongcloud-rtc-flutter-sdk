buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'http://developer.huawei.com/repo/' }
    }

    ext.'target-platform' = 'android-arm,android-arm64'
}

rootProject.buildDir = '../build'

subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}

subprojects {
    project.evaluationDependsOn(':app')
}

def im = rootProject.file('../../../flutter-im-plugin')

subprojects {
    afterEvaluate {
        if (project.name == "libcore" && it.hasProperty('android') && !im.exists()) {
            android {
                packagingOptions {
//                    exclude 'lib/armeabi/libRongIMLib.so'
//                    exclude 'lib/armeabi-v7a/libRongIMLib.so'
//                    exclude 'lib/arm64-v8a/libRongIMLib.so'
//                    exclude 'lib/x86/libRongIMLib.so'
//                    exclude 'lib/x86_64/libRongIMLib.so'

//                    exclude 'lib/armeabi/libsqlite.so'
//                    exclude 'lib/armeabi-v7a/libsqlite.so'
//                    exclude 'lib/arm64-v8a/libsqlite.so'
//                    exclude 'lib/x86/libsqlite.so'
//                    exclude 'lib/x86_64/libsqlite.so'
                }
            }
        }
        if (project.name == "push" && it.hasProperty('android')) {
            android {
                packagingOptions {
                    merge 'res/values/values.xml'
                    merge 'classes.jar'
                    merge 'AndroidManifest.xml'
                    merge 'R.txt'
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}